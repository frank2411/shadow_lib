"""Added qty to BorrowedBook table

Revision ID: a47b660843f2
Revises: 448b0f1d6ff2
Create Date: 2023-01-22 23:43:25.534107

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a47b660843f2'
down_revision = '448b0f1d6ff2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('authors', sa.Column('created_by_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('authors_created_by_fkey', 'authors', type_='foreignkey')
    op.create_foreign_key(None, 'authors', 'backoffice_users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.drop_column('authors', 'created_by')
    op.add_column('books', sa.Column('created_by_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('books_created_by_fkey', 'books', type_='foreignkey')
    op.create_foreign_key(None, 'books', 'backoffice_users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.drop_column('books', 'created_by')
    op.add_column('borrowed_books', sa.Column('qty', sa.Integer(), nullable=False))
    op.add_column('customers', sa.Column('created_by_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('customers_created_by_fkey', 'customers', type_='foreignkey')
    op.create_foreign_key(None, 'customers', 'backoffice_users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.drop_column('customers', 'created_by')
    op.add_column('orders', sa.Column('created_by_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('orders_created_by_fkey', 'orders', type_='foreignkey')
    op.create_foreign_key(None, 'orders', 'backoffice_users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.drop_column('orders', 'created_by')
    op.drop_column('orders', 'qty')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('orders', sa.Column('qty', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('orders', sa.Column('created_by', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.create_foreign_key('orders_created_by_fkey', 'orders', 'backoffice_users', ['created_by'], ['id'], ondelete='SET NULL')
    op.drop_column('orders', 'created_by_id')
    op.add_column('customers', sa.Column('created_by', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'customers', type_='foreignkey')
    op.create_foreign_key('customers_created_by_fkey', 'customers', 'backoffice_users', ['created_by'], ['id'], ondelete='SET NULL')
    op.drop_column('customers', 'created_by_id')
    op.drop_column('borrowed_books', 'qty')
    op.add_column('books', sa.Column('created_by', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'books', type_='foreignkey')
    op.create_foreign_key('books_created_by_fkey', 'books', 'backoffice_users', ['created_by'], ['id'], ondelete='SET NULL')
    op.drop_column('books', 'created_by_id')
    op.add_column('authors', sa.Column('created_by', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'authors', type_='foreignkey')
    op.create_foreign_key('authors_created_by_fkey', 'authors', 'backoffice_users', ['created_by'], ['id'], ondelete='SET NULL')
    op.drop_column('authors', 'created_by_id')
    # ### end Alembic commands ###
